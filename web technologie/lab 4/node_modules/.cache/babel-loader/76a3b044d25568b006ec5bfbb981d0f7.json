{"ast":null,"code":"import { convertElement } from 'hast-util-is-element';\nimport { hasProperty } from 'hast-util-has-property';\nimport { embedded } from 'hast-util-embedded';\nimport bodyOkLink from 'hast-util-is-body-ok-link';\nvar basic = convertElement(['a', 'abbr', // `area` is in fact only phrasing if it is inside a `map` element.\n// However, since `area`s are required to be inside a `map` element, and it’s\n// a rather involved check, it’s ignored here for now.\n'area', 'b', 'bdi', 'bdo', 'br', 'button', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'i', 'input', 'ins', 'kbd', 'keygen', 'label', 'map', 'mark', 'meter', 'noscript', 'output', 'progress', 'q', 'ruby', 's', 'samp', 'script', 'select', 'small', 'span', 'strong', 'sub', 'sup', 'template', 'textarea', 'time', 'u', 'var', 'wbr']);\nvar meta = convertElement('meta');\n/**\n * @param {unknown} node\n * @returns {boolean}\n */\n\nexport function phrasing(node) {\n  return (// @ts-ignore Looks like a text.\n    node && node.type === 'text' || basic(node) || embedded(node) || bodyOkLink(node) || meta(node) && hasProperty(node, 'itemProp')\n  );\n}","map":{"version":3,"sources":["/home/jacques/Documents/ece/inge4/techno web/lab/lab 4/lab/node_modules/hast-util-phrasing/index.js"],"names":["convertElement","hasProperty","embedded","bodyOkLink","basic","meta","phrasing","node","type"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,sBAA7B;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,QAAR,QAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,IAAIC,KAAK,GAAGJ,cAAc,CAAC,CACzB,GADyB,EAEzB,MAFyB,EAGzB;AACA;AACA;AACA,MANyB,EAOzB,GAPyB,EAQzB,KARyB,EASzB,KATyB,EAUzB,IAVyB,EAWzB,QAXyB,EAYzB,MAZyB,EAazB,MAbyB,EAczB,MAdyB,EAezB,UAfyB,EAgBzB,KAhByB,EAiBzB,KAjByB,EAkBzB,IAlByB,EAmBzB,GAnByB,EAoBzB,OApByB,EAqBzB,KArByB,EAsBzB,KAtByB,EAuBzB,QAvByB,EAwBzB,OAxByB,EAyBzB,KAzByB,EA0BzB,MA1ByB,EA2BzB,OA3ByB,EA4BzB,UA5ByB,EA6BzB,QA7ByB,EA8BzB,UA9ByB,EA+BzB,GA/ByB,EAgCzB,MAhCyB,EAiCzB,GAjCyB,EAkCzB,MAlCyB,EAmCzB,QAnCyB,EAoCzB,QApCyB,EAqCzB,OArCyB,EAsCzB,MAtCyB,EAuCzB,QAvCyB,EAwCzB,KAxCyB,EAyCzB,KAzCyB,EA0CzB,UA1CyB,EA2CzB,UA3CyB,EA4CzB,MA5CyB,EA6CzB,GA7CyB,EA8CzB,KA9CyB,EA+CzB,KA/CyB,CAAD,CAA1B;AAkDA,IAAIK,IAAI,GAAGL,cAAc,CAAC,MAAD,CAAzB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASM,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,SACE;AACCA,IAAAA,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,MAAvB,IACAJ,KAAK,CAACG,IAAD,CADL,IAEAL,QAAQ,CAACK,IAAD,CAFR,IAGAJ,UAAU,CAACI,IAAD,CAHV,IAICF,IAAI,CAACE,IAAD,CAAJ,IAAcN,WAAW,CAACM,IAAD,EAAO,UAAP;AAN5B;AAQD","sourcesContent":["import {convertElement} from 'hast-util-is-element'\nimport {hasProperty} from 'hast-util-has-property'\nimport {embedded} from 'hast-util-embedded'\nimport bodyOkLink from 'hast-util-is-body-ok-link'\n\nvar basic = convertElement([\n  'a',\n  'abbr',\n  // `area` is in fact only phrasing if it is inside a `map` element.\n  // However, since `area`s are required to be inside a `map` element, and it’s\n  // a rather involved check, it’s ignored here for now.\n  'area',\n  'b',\n  'bdi',\n  'bdo',\n  'br',\n  'button',\n  'cite',\n  'code',\n  'data',\n  'datalist',\n  'del',\n  'dfn',\n  'em',\n  'i',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'map',\n  'mark',\n  'meter',\n  'noscript',\n  'output',\n  'progress',\n  'q',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'select',\n  'small',\n  'span',\n  'strong',\n  'sub',\n  'sup',\n  'template',\n  'textarea',\n  'time',\n  'u',\n  'var',\n  'wbr'\n])\n\nvar meta = convertElement('meta')\n\n/**\n * @param {unknown} node\n * @returns {boolean}\n */\nexport function phrasing(node) {\n  return (\n    // @ts-ignore Looks like a text.\n    (node && node.type === 'text') ||\n    basic(node) ||\n    embedded(node) ||\n    bodyOkLink(node) ||\n    (meta(node) && hasProperty(node, 'itemProp'))\n  )\n}\n"]},"metadata":{},"sourceType":"module"}